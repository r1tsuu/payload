{"version":3,"sources":["../../src/transactions/rollbackTransaction.ts"],"sourcesContent":["import type { RollbackTransaction } from 'payload'\n\nexport const rollbackTransaction: RollbackTransaction = async function rollbackTransaction(\n  id = '',\n) {\n  // if multiple operations are using the same transaction, the first will flow through and delete the session.\n  // subsequent calls should be ignored.\n  if (!this.sessions[id]) {\n    return\n  }\n\n  // end the session promise in failure by calling reject\n  await this.sessions[id].reject()\n\n  // delete the session causing any other operations with the same transaction to fail\n  delete this.sessions[id]\n}\n"],"names":["rollbackTransaction","id","sessions","reject"],"mappings":"AAEA,OAAO,MAAMA,sBAA2C,eAAeA,oBACrEC,KAAK,EAAE;IAEP,6GAA6G;IAC7G,sCAAsC;IACtC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACD,GAAG,EAAE;QACtB;IACF;IAEA,uDAAuD;IACvD,MAAM,IAAI,CAACC,QAAQ,CAACD,GAAG,CAACE,MAAM;IAE9B,oFAAoF;IACpF,OAAO,IAAI,CAACD,QAAQ,CAACD,GAAG;AAC1B,EAAC"}