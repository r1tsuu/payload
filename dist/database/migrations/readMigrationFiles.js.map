{"version":3,"sources":["../../../src/database/migrations/readMigrationFiles.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\n\nimport type { Payload } from '../../index.js'\nimport type { Migration } from '../types.js'\n\n/**\n * Read the migration files from disk\n */\nexport const readMigrationFiles = async ({\n  payload,\n}: {\n  payload: Payload\n}): Promise<Migration[]> => {\n  if (!fs.existsSync(payload.db.migrationDir)) {\n    payload.logger.error({\n      msg: `No migration directory found at ${payload.db.migrationDir}`,\n    })\n    return []\n  }\n\n  payload.logger.info({\n    msg: `Reading migration files from ${payload.db.migrationDir}`,\n  })\n\n  const files = fs\n    .readdirSync(payload.db.migrationDir)\n    .sort()\n    .filter((f) => {\n      return f.endsWith('.ts') || f.endsWith('.js')\n    })\n    .map((file) => {\n      return path.resolve(payload.db.migrationDir, file)\n    })\n\n  return Promise.all(\n    files.map(async (filePath) => {\n      // eval used to circumvent errors bundling\n      let migration = await eval(\n        `${typeof require === 'function' ? 'require' : 'import'}('${filePath.replaceAll('\\\\', '/')}')`,\n      )\n      if ('default' in migration) migration = migration.default\n\n      const result: Migration = {\n        name: path.basename(filePath).split('.')?.[0],\n        down: migration.down,\n        up: migration.up,\n      }\n\n      return result\n    }),\n  )\n}\n"],"names":["fs","path","readMigrationFiles","payload","existsSync","db","migrationDir","logger","error","msg","info","files","readdirSync","sort","filter","f","endsWith","map","file","resolve","Promise","all","filePath","migration","eval","require","replaceAll","default","result","name","basename","split","down","up"],"mappings":"AAAA,OAAOA,QAAQ,KAAI;AACnB,OAAOC,UAAU,OAAM;AAKvB;;CAEC,GACD,OAAO,MAAMC,qBAAqB,OAAO,EACvCC,OAAO,EAGR;IACC,IAAI,CAACH,GAAGI,UAAU,CAACD,QAAQE,EAAE,CAACC,YAAY,GAAG;QAC3CH,QAAQI,MAAM,CAACC,KAAK,CAAC;YACnBC,KAAK,CAAC,gCAAgC,EAAEN,QAAQE,EAAE,CAACC,YAAY,CAAC,CAAC;QACnE;QACA,OAAO,EAAE;IACX;IAEAH,QAAQI,MAAM,CAACG,IAAI,CAAC;QAClBD,KAAK,CAAC,6BAA6B,EAAEN,QAAQE,EAAE,CAACC,YAAY,CAAC,CAAC;IAChE;IAEA,MAAMK,QAAQX,GACXY,WAAW,CAACT,QAAQE,EAAE,CAACC,YAAY,EACnCO,IAAI,GACJC,MAAM,CAAC,CAACC;QACP,OAAOA,EAAEC,QAAQ,CAAC,UAAUD,EAAEC,QAAQ,CAAC;IACzC,GACCC,GAAG,CAAC,CAACC;QACJ,OAAOjB,KAAKkB,OAAO,CAAChB,QAAQE,EAAE,CAACC,YAAY,EAAEY;IAC/C;IAEF,OAAOE,QAAQC,GAAG,CAChBV,MAAMM,GAAG,CAAC,OAAOK;QACf,0CAA0C;QAC1C,IAAIC,YAAY,MAAMC,KACpB,CAAC,EAAE,OAAOC,YAAY,aAAa,YAAY,SAAS,EAAE,EAAEH,SAASI,UAAU,CAAC,MAAM,KAAK,EAAE,CAAC;QAEhG,IAAI,aAAaH,WAAWA,YAAYA,UAAUI,OAAO;QAEzD,MAAMC,SAAoB;YACxBC,MAAM5B,KAAK6B,QAAQ,CAACR,UAAUS,KAAK,CAAC,MAAM,CAAC,EAAE;YAC7CC,MAAMT,UAAUS,IAAI;YACpBC,IAAIV,UAAUU,EAAE;QAClB;QAEA,OAAOL;IACT;AAEJ,EAAC"}