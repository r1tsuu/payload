{"version":3,"sources":["../../../src/database/migrations/getPredefinedMigration.ts"],"sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport { pathToFileURL } from 'url'\n\nimport type { Payload } from '../../index.js'\nimport type { MigrationTemplateArgs } from '../types.js'\n\n/**\n * Get predefined migration 'up', 'down' and 'imports'\n */\nexport const getPredefinedMigration = async ({\n  dirname,\n  file,\n  migrationName: migrationNameArg,\n  payload,\n}: {\n  dirname: string\n  file?: string\n  migrationName?: string\n  payload: Payload\n}): Promise<MigrationTemplateArgs> => {\n  // Check for predefined migration.\n  // Either passed in via --file or prefixed with '@payloadcms/db-mongodb/' for example\n  if (file || migrationNameArg?.startsWith('@payloadcms/')) {\n    // removes the package name from the migrationName.\n    const migrationName = (file || migrationNameArg).split('/').slice(2).join('/')\n    let cleanPath = path.join(dirname, `./predefinedMigrations/${migrationName}.mjs`)\n\n    // Check if predefined migration exists\n    if (fs.existsSync(cleanPath)) {\n      cleanPath = cleanPath.replaceAll('\\\\', '/')\n      const moduleURL = pathToFileURL(cleanPath)\n      try {\n        const { downSQL, imports, upSQL } = await eval(`import('${moduleURL.href}')`)\n        return { downSQL, imports, upSQL }\n      } catch (error) {\n        payload.logger.error(`Error loading predefined migration ${migrationName}`)\n        throw error\n      }\n    } else {\n      payload.logger.error({\n        msg: `Canned migration ${migrationName} not found.`,\n      })\n      process.exit(1)\n    }\n  }\n  return {}\n}\n"],"names":["fs","path","pathToFileURL","getPredefinedMigration","dirname","file","migrationName","migrationNameArg","payload","startsWith","split","slice","join","cleanPath","existsSync","replaceAll","moduleURL","downSQL","imports","upSQL","eval","href","error","logger","msg","process","exit"],"mappings":"AAAA,OAAOA,QAAQ,KAAI;AACnB,OAAOC,UAAU,OAAM;AACvB,SAASC,aAAa,QAAQ,MAAK;AAKnC;;CAEC,GACD,OAAO,MAAMC,yBAAyB,OAAO,EAC3CC,OAAO,EACPC,IAAI,EACJC,eAAeC,gBAAgB,EAC/BC,OAAO,EAMR;IACC,kCAAkC;IAClC,qFAAqF;IACrF,IAAIH,QAAQE,kBAAkBE,WAAW,iBAAiB;QACxD,mDAAmD;QACnD,MAAMH,gBAAgB,AAACD,CAAAA,QAAQE,gBAAe,EAAGG,KAAK,CAAC,KAAKC,KAAK,CAAC,GAAGC,IAAI,CAAC;QAC1E,IAAIC,YAAYZ,KAAKW,IAAI,CAACR,SAAS,CAAC,uBAAuB,EAAEE,cAAc,IAAI,CAAC;QAEhF,uCAAuC;QACvC,IAAIN,GAAGc,UAAU,CAACD,YAAY;YAC5BA,YAAYA,UAAUE,UAAU,CAAC,MAAM;YACvC,MAAMC,YAAYd,cAAcW;YAChC,IAAI;gBACF,MAAM,EAAEI,OAAO,EAAEC,OAAO,EAAEC,KAAK,EAAE,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAEJ,UAAUK,IAAI,CAAC,EAAE,CAAC;gBAC5E,OAAO;oBAAEJ;oBAASC;oBAASC;gBAAM;YACnC,EAAE,OAAOG,OAAO;gBACdd,QAAQe,MAAM,CAACD,KAAK,CAAC,CAAC,mCAAmC,EAAEhB,cAAc,CAAC;gBAC1E,MAAMgB;YACR;QACF,OAAO;YACLd,QAAQe,MAAM,CAACD,KAAK,CAAC;gBACnBE,KAAK,CAAC,iBAAiB,EAAElB,cAAc,WAAW,CAAC;YACrD;YACAmB,QAAQC,IAAI,CAAC;QACf;IACF;IACA,OAAO,CAAC;AACV,EAAC"}