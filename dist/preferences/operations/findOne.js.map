{"version":3,"sources":["../../../src/preferences/operations/findOne.ts"],"sourcesContent":["import type { TypedCollection } from '../../index.js'\nimport type { Where } from '../../types/index.js'\nimport type { PreferenceRequest } from '../types.js'\n\nasync function findOne(args: PreferenceRequest): Promise<TypedCollection['_preference']> {\n  const {\n    key,\n    req: { payload },\n    req,\n    user,\n  } = args\n\n  if (!user) return null\n\n  const where: Where = {\n    and: [\n      { key: { equals: key } },\n      { 'user.value': { equals: user.id } },\n      { 'user.relationTo': { equals: user.collection } },\n    ],\n  }\n\n  return await payload.db.findOne({\n    collection: 'payload-preferences',\n    req,\n    where,\n  })\n}\n\nexport default findOne\n"],"names":["findOne","args","key","req","payload","user","where","and","equals","id","collection","db"],"mappings":"AAIA,eAAeA,QAAQC,IAAuB;IAC5C,MAAM,EACJC,GAAG,EACHC,KAAK,EAAEC,OAAO,EAAE,EAChBD,GAAG,EACHE,IAAI,EACL,GAAGJ;IAEJ,IAAI,CAACI,MAAM,OAAO;IAElB,MAAMC,QAAe;QACnBC,KAAK;YACH;gBAAEL,KAAK;oBAAEM,QAAQN;gBAAI;YAAE;YACvB;gBAAE,cAAc;oBAAEM,QAAQH,KAAKI,EAAE;gBAAC;YAAE;YACpC;gBAAE,mBAAmB;oBAAED,QAAQH,KAAKK,UAAU;gBAAC;YAAE;SAClD;IACH;IAEA,OAAO,MAAMN,QAAQO,EAAE,CAACX,OAAO,CAAC;QAC9BU,YAAY;QACZP;QACAG;IACF;AACF;AAEA,eAAeN,QAAO"}