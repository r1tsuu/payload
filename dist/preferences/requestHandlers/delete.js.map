{"version":3,"sources":["../../../src/preferences/requestHandlers/delete.ts"],"sourcesContent":["import httpStatus from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\nimport type { PayloadRequestWithData } from '../../types/index.js'\n\nimport deleteOperation from '../operations/delete.js'\n\nexport const deleteHandler: PayloadHandler = async (incomingReq): Promise<Response> => {\n  // We cannot import the addDataAndFileToRequest utility here from the 'next' package because of dependency issues\n  // However that utility should be used where possible instead of manually appending the data\n  let data\n\n  try {\n    data = await incomingReq.json()\n  } catch (error) {\n    data = {}\n  }\n\n  const reqWithData: PayloadRequestWithData = incomingReq\n\n  if (data) {\n    reqWithData.data = data\n    reqWithData.json = () => Promise.resolve(data)\n  }\n\n  const result = await deleteOperation({\n    key: reqWithData.routeParams?.key as string,\n    req: reqWithData,\n    user: reqWithData.user,\n  })\n\n  return Response.json(\n    {\n      ...result,\n      message: reqWithData.t('general:deletedSuccessfully'),\n    },\n    {\n      status: httpStatus.OK,\n    },\n  )\n}\n"],"names":["httpStatus","deleteOperation","deleteHandler","incomingReq","data","json","error","reqWithData","Promise","resolve","result","key","routeParams","req","user","Response","message","t","status","OK"],"mappings":"AAAA,OAAOA,gBAAgB,cAAa;AAKpC,OAAOC,qBAAqB,0BAAyB;AAErD,OAAO,MAAMC,gBAAgC,OAAOC;IAClD,iHAAiH;IACjH,4FAA4F;IAC5F,IAAIC;IAEJ,IAAI;QACFA,OAAO,MAAMD,YAAYE,IAAI;IAC/B,EAAE,OAAOC,OAAO;QACdF,OAAO,CAAC;IACV;IAEA,MAAMG,cAAsCJ;IAE5C,IAAIC,MAAM;QACRG,YAAYH,IAAI,GAAGA;QACnBG,YAAYF,IAAI,GAAG,IAAMG,QAAQC,OAAO,CAACL;IAC3C;IAEA,MAAMM,SAAS,MAAMT,gBAAgB;QACnCU,KAAKJ,YAAYK,WAAW,EAAED;QAC9BE,KAAKN;QACLO,MAAMP,YAAYO,IAAI;IACxB;IAEA,OAAOC,SAASV,IAAI,CAClB;QACE,GAAGK,MAAM;QACTM,SAAST,YAAYU,CAAC,CAAC;IACzB,GACA;QACEC,QAAQlB,WAAWmB,EAAE;IACvB;AAEJ,EAAC"}