{"version":3,"sources":["../../../src/preferences/requestHandlers/findOne.ts"],"sourcesContent":["import httpStatus from 'http-status'\n\nimport type { PayloadHandler } from '../../config/types.js'\nimport type { PayloadRequestWithData } from '../../types/index.js'\n\nimport findOne from '../operations/findOne.js'\n\nexport const findByIDHandler: PayloadHandler = async (incomingReq): Promise<Response> => {\n  // We cannot import the addDataAndFileToRequest utility here from the 'next' package because of dependency issues\n  // However that utility should be used where possible instead of manually appending the data\n  let data\n\n  try {\n    data = await incomingReq.json()\n  } catch (error) {\n    data = {}\n  }\n\n  const reqWithData: PayloadRequestWithData = incomingReq\n\n  if (data) {\n    reqWithData.data = data\n    reqWithData.json = () => Promise.resolve(data)\n  }\n\n  const result = await findOne({\n    key: reqWithData.routeParams?.key as string,\n    req: reqWithData,\n    user: reqWithData.user,\n  })\n\n  return Response.json(\n    {\n      ...(result\n        ? result\n        : {\n            message: reqWithData.t('general:notFound'),\n            value: null,\n          }),\n    },\n    {\n      status: httpStatus.OK,\n    },\n  )\n}\n"],"names":["httpStatus","findOne","findByIDHandler","incomingReq","data","json","error","reqWithData","Promise","resolve","result","key","routeParams","req","user","Response","message","t","value","status","OK"],"mappings":"AAAA,OAAOA,gBAAgB,cAAa;AAKpC,OAAOC,aAAa,2BAA0B;AAE9C,OAAO,MAAMC,kBAAkC,OAAOC;IACpD,iHAAiH;IACjH,4FAA4F;IAC5F,IAAIC;IAEJ,IAAI;QACFA,OAAO,MAAMD,YAAYE,IAAI;IAC/B,EAAE,OAAOC,OAAO;QACdF,OAAO,CAAC;IACV;IAEA,MAAMG,cAAsCJ;IAE5C,IAAIC,MAAM;QACRG,YAAYH,IAAI,GAAGA;QACnBG,YAAYF,IAAI,GAAG,IAAMG,QAAQC,OAAO,CAACL;IAC3C;IAEA,MAAMM,SAAS,MAAMT,QAAQ;QAC3BU,KAAKJ,YAAYK,WAAW,EAAED;QAC9BE,KAAKN;QACLO,MAAMP,YAAYO,IAAI;IACxB;IAEA,OAAOC,SAASV,IAAI,CAClB;QACE,GAAIK,SACAA,SACA;YACEM,SAAST,YAAYU,CAAC,CAAC;YACvBC,OAAO;QACT,CAAC;IACP,GACA;QACEC,QAAQnB,WAAWoB,EAAE;IACvB;AAEJ,EAAC"}