{"version":3,"sources":["../../../../src/collections/operations/local/create.ts"],"sourcesContent":["import type { CollectionSlug, Payload, TypedLocale } from '../../../index.js'\nimport type { Document, PayloadRequestWithData, RequestContext } from '../../../types/index.js'\nimport type { File } from '../../../uploads/types.js'\nimport type { DataFromCollectionSlug, RequiredDataFromCollectionSlug } from '../../config/types.js'\n\nimport { APIError } from '../../../errors/index.js'\nimport { getFileByPath } from '../../../uploads/getFileByPath.js'\nimport { createLocalReq } from '../../../utilities/createLocalReq.js'\nimport { createOperation } from '../create.js'\n\nexport type Options<TSlug extends CollectionSlug> = {\n  collection: TSlug\n  /**\n   * context, which will then be passed to req.context, which can be read by hooks\n   */\n  context?: RequestContext\n  data: RequiredDataFromCollectionSlug<TSlug>\n  depth?: number\n  disableVerificationEmail?: boolean\n  draft?: boolean\n  fallbackLocale?: TypedLocale\n  file?: File\n  filePath?: string\n  locale?: TypedLocale\n  overrideAccess?: boolean\n  overwriteExistingFiles?: boolean\n  req?: PayloadRequestWithData\n  showHiddenFields?: boolean\n  user?: Document\n}\n\n// eslint-disable-next-line no-restricted-exports\nexport default async function createLocal<TSlug extends CollectionSlug>(\n  payload: Payload,\n  options: Options<TSlug>,\n): Promise<DataFromCollectionSlug<TSlug>> {\n  const {\n    collection: collectionSlug,\n    data,\n    depth,\n    disableVerificationEmail,\n    draft,\n    file,\n    filePath,\n    overrideAccess = true,\n    overwriteExistingFiles = false,\n    showHiddenFields,\n  } = options\n  const collection = payload.collections[collectionSlug]\n\n  if (!collection) {\n    throw new APIError(\n      `The collection with slug ${String(collectionSlug)} can't be found. Create Operation.`,\n    )\n  }\n\n  const req = await createLocalReq(options, payload)\n  req.file = file ?? (await getFileByPath(filePath))\n\n  return createOperation<TSlug>({\n    collection,\n    data,\n    depth,\n    disableVerificationEmail,\n    draft,\n    overrideAccess,\n    overwriteExistingFiles,\n    req,\n    showHiddenFields,\n  })\n}\n"],"names":["APIError","getFileByPath","createLocalReq","createOperation","createLocal","payload","options","collection","collectionSlug","data","depth","disableVerificationEmail","draft","file","filePath","overrideAccess","overwriteExistingFiles","showHiddenFields","collections","String","req"],"mappings":"AAKA,SAASA,QAAQ,QAAQ,2BAA0B;AACnD,SAASC,aAAa,QAAQ,oCAAmC;AACjE,SAASC,cAAc,QAAQ,uCAAsC;AACrE,SAASC,eAAe,QAAQ,eAAc;AAuB9C,iDAAiD;AACjD,eAAe,eAAeC,YAC5BC,OAAgB,EAChBC,OAAuB;IAEvB,MAAM,EACJC,YAAYC,cAAc,EAC1BC,IAAI,EACJC,KAAK,EACLC,wBAAwB,EACxBC,KAAK,EACLC,IAAI,EACJC,QAAQ,EACRC,iBAAiB,IAAI,EACrBC,yBAAyB,KAAK,EAC9BC,gBAAgB,EACjB,GAAGX;IACJ,MAAMC,aAAaF,QAAQa,WAAW,CAACV,eAAe;IAEtD,IAAI,CAACD,YAAY;QACf,MAAM,IAAIP,SACR,CAAC,yBAAyB,EAAEmB,OAAOX,gBAAgB,kCAAkC,CAAC;IAE1F;IAEA,MAAMY,MAAM,MAAMlB,eAAeI,SAASD;IAC1Ce,IAAIP,IAAI,GAAGA,QAAS,MAAMZ,cAAca;IAExC,OAAOX,gBAAuB;QAC5BI;QACAE;QACAC;QACAC;QACAC;QACAG;QACAC;QACAI;QACAH;IACF;AACF"}