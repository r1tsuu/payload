{"version":3,"sources":["../../../../src/collections/operations/local/findVersions.ts"],"sourcesContent":["import type { PaginatedDocs } from '../../../database/types.js'\nimport type { CollectionSlug, Payload, TypedLocale } from '../../../index.js'\nimport type {\n  Document,\n  PayloadRequestWithData,\n  RequestContext,\n  Where,\n} from '../../../types/index.js'\nimport type { TypeWithVersion } from '../../../versions/types.js'\nimport type { DataFromCollectionSlug } from '../../config/types.js'\n\nimport { APIError } from '../../../errors/index.js'\nimport { createLocalReq } from '../../../utilities/createLocalReq.js'\nimport { findVersionsOperation } from '../findVersions.js'\n\nexport type Options<TSlug extends CollectionSlug> = {\n  collection: TSlug\n  /**\n   * context, which will then be passed to req.context, which can be read by hooks\n   */\n  context?: RequestContext\n  depth?: number\n  draft?: boolean\n  fallbackLocale?: TypedLocale\n  limit?: number\n  locale?: 'all' | TypedLocale\n  overrideAccess?: boolean\n  page?: number\n  req?: PayloadRequestWithData\n  showHiddenFields?: boolean\n  sort?: string\n  user?: Document\n  where?: Where\n}\n\nexport default async function findVersionsLocal<TSlug extends CollectionSlug>(\n  payload: Payload,\n  options: Options<TSlug>,\n): Promise<PaginatedDocs<TypeWithVersion<DataFromCollectionSlug<TSlug>>>> {\n  const {\n    collection: collectionSlug,\n    depth,\n    limit,\n    overrideAccess = true,\n    page,\n    showHiddenFields,\n    sort,\n    where,\n  } = options\n\n  const collection = payload.collections[collectionSlug]\n\n  if (!collection) {\n    throw new APIError(\n      `The collection with slug ${String(collectionSlug)} can't be found. Find Versions Operation.`,\n    )\n  }\n\n  return findVersionsOperation({\n    collection,\n    depth,\n    limit,\n    overrideAccess,\n    page,\n    req: await createLocalReq(options, payload),\n    showHiddenFields,\n    sort,\n    where,\n  })\n}\n"],"names":["APIError","createLocalReq","findVersionsOperation","findVersionsLocal","payload","options","collection","collectionSlug","depth","limit","overrideAccess","page","showHiddenFields","sort","where","collections","String","req"],"mappings":"AAWA,SAASA,QAAQ,QAAQ,2BAA0B;AACnD,SAASC,cAAc,QAAQ,uCAAsC;AACrE,SAASC,qBAAqB,QAAQ,qBAAoB;AAsB1D,eAAe,eAAeC,kBAC5BC,OAAgB,EAChBC,OAAuB;IAEvB,MAAM,EACJC,YAAYC,cAAc,EAC1BC,KAAK,EACLC,KAAK,EACLC,iBAAiB,IAAI,EACrBC,IAAI,EACJC,gBAAgB,EAChBC,IAAI,EACJC,KAAK,EACN,GAAGT;IAEJ,MAAMC,aAAaF,QAAQW,WAAW,CAACR,eAAe;IAEtD,IAAI,CAACD,YAAY;QACf,MAAM,IAAIN,SACR,CAAC,yBAAyB,EAAEgB,OAAOT,gBAAgB,yCAAyC,CAAC;IAEjG;IAEA,OAAOL,sBAAsB;QAC3BI;QACAE;QACAC;QACAC;QACAC;QACAM,KAAK,MAAMhB,eAAeI,SAASD;QACnCQ;QACAC;QACAC;IACF;AACF"}