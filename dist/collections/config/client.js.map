{"version":3,"sources":["../../../src/collections/config/client.ts"],"sourcesContent":["import type { LivePreviewConfig, ServerOnlyLivePreviewProperties } from '../../config/types.js'\n\nexport type ServerOnlyCollectionProperties = keyof Pick<\n  SanitizedCollectionConfig,\n  'access' | 'custom' | 'endpoints' | 'hooks'\n>\n\nexport type ServerOnlyCollectionAdminProperties = keyof Pick<\n  SanitizedCollectionConfig['admin'],\n  'components' | 'hidden' | 'preview'\n>\n\nexport type ClientCollectionConfig = Omit<\n  SanitizedCollectionConfig,\n  'admin' | 'fields' | ServerOnlyCollectionProperties\n> & {\n  admin: Omit<\n    SanitizedCollectionConfig['admin'],\n    'fields' | 'livePreview' | ServerOnlyCollectionAdminProperties\n  > & {\n    livePreview?: Omit<LivePreviewConfig, ServerOnlyLivePreviewProperties>\n  }\n  fields: ClientFieldConfig[]\n}\n\nimport type { TFunction } from '@payloadcms/translations'\n\nimport type { ClientFieldConfig } from '../../fields/config/client.js'\nimport type { SanitizedCollectionConfig } from './types.js'\n\nimport { createClientFieldConfigs } from '../../fields/config/client.js'\n\nexport const createClientCollectionConfig = ({\n  collection,\n  t,\n}: {\n  collection: SanitizedCollectionConfig\n  t: TFunction\n}) => {\n  const sanitized = { ...collection }\n  sanitized.fields = createClientFieldConfigs({ fields: sanitized.fields, t })\n\n  const serverOnlyCollectionProperties: Partial<ServerOnlyCollectionProperties>[] = [\n    'hooks',\n    'access',\n    'endpoints',\n    'custom',\n    // `upload`\n    // `admin`\n    // are all handled separately\n  ]\n\n  serverOnlyCollectionProperties.forEach((key) => {\n    if (key in sanitized) {\n      delete sanitized[key]\n    }\n  })\n\n  if ('upload' in sanitized && typeof sanitized.upload === 'object') {\n    sanitized.upload = { ...sanitized.upload }\n    delete sanitized.upload.handlers\n    delete sanitized.upload.adminThumbnail\n    delete sanitized.upload.externalFileHeaderFilter\n  }\n\n  if ('auth' in sanitized && typeof sanitized.auth === 'object') {\n    sanitized.auth = { ...sanitized.auth }\n    delete sanitized.auth.strategies\n    delete sanitized.auth.forgotPassword\n    delete sanitized.auth.verify\n  }\n\n  if (sanitized.labels) {\n    Object.entries(sanitized.labels).forEach(([labelType, collectionLabel]) => {\n      if (typeof collectionLabel === 'function') {\n        sanitized.labels[labelType] = collectionLabel({ t })\n      }\n    })\n  }\n\n  if ('admin' in sanitized) {\n    sanitized.admin = { ...sanitized.admin }\n\n    const serverOnlyCollectionAdminProperties: Partial<ServerOnlyCollectionAdminProperties>[] = [\n      'components',\n      'hidden',\n      'preview',\n      // `livePreview` is handled separately\n    ]\n\n    serverOnlyCollectionAdminProperties.forEach((key) => {\n      if (key in sanitized.admin) {\n        delete sanitized.admin[key]\n      }\n    })\n\n    if ('livePreview' in sanitized.admin) {\n      sanitized.admin.livePreview = { ...sanitized.admin.livePreview }\n      delete sanitized.admin.livePreview.url\n    }\n  }\n\n  return sanitized\n}\n\nexport const createClientCollectionConfigs = ({\n  collections,\n  t,\n}: {\n  collections: SanitizedCollectionConfig[]\n  t: TFunction\n}): ClientCollectionConfig[] =>\n  collections.map((collection) => createClientCollectionConfig({ collection, t }))\n"],"names":["createClientFieldConfigs","createClientCollectionConfig","collection","t","sanitized","fields","serverOnlyCollectionProperties","forEach","key","upload","handlers","adminThumbnail","externalFileHeaderFilter","auth","strategies","forgotPassword","verify","labels","Object","entries","labelType","collectionLabel","admin","serverOnlyCollectionAdminProperties","livePreview","url","createClientCollectionConfigs","collections","map"],"mappings":"AA8BA,SAASA,wBAAwB,QAAQ,gCAA+B;AAExE,OAAO,MAAMC,+BAA+B,CAAC,EAC3CC,UAAU,EACVC,CAAC,EAIF;IACC,MAAMC,YAAY;QAAE,GAAGF,UAAU;IAAC;IAClCE,UAAUC,MAAM,GAAGL,yBAAyB;QAAEK,QAAQD,UAAUC,MAAM;QAAEF;IAAE;IAE1E,MAAMG,iCAA4E;QAChF;QACA;QACA;QACA;KAID;IAEDA,+BAA+BC,OAAO,CAAC,CAACC;QACtC,IAAIA,OAAOJ,WAAW;YACpB,OAAOA,SAAS,CAACI,IAAI;QACvB;IACF;IAEA,IAAI,YAAYJ,aAAa,OAAOA,UAAUK,MAAM,KAAK,UAAU;QACjEL,UAAUK,MAAM,GAAG;YAAE,GAAGL,UAAUK,MAAM;QAAC;QACzC,OAAOL,UAAUK,MAAM,CAACC,QAAQ;QAChC,OAAON,UAAUK,MAAM,CAACE,cAAc;QACtC,OAAOP,UAAUK,MAAM,CAACG,wBAAwB;IAClD;IAEA,IAAI,UAAUR,aAAa,OAAOA,UAAUS,IAAI,KAAK,UAAU;QAC7DT,UAAUS,IAAI,GAAG;YAAE,GAAGT,UAAUS,IAAI;QAAC;QACrC,OAAOT,UAAUS,IAAI,CAACC,UAAU;QAChC,OAAOV,UAAUS,IAAI,CAACE,cAAc;QACpC,OAAOX,UAAUS,IAAI,CAACG,MAAM;IAC9B;IAEA,IAAIZ,UAAUa,MAAM,EAAE;QACpBC,OAAOC,OAAO,CAACf,UAAUa,MAAM,EAAEV,OAAO,CAAC,CAAC,CAACa,WAAWC,gBAAgB;YACpE,IAAI,OAAOA,oBAAoB,YAAY;gBACzCjB,UAAUa,MAAM,CAACG,UAAU,GAAGC,gBAAgB;oBAAElB;gBAAE;YACpD;QACF;IACF;IAEA,IAAI,WAAWC,WAAW;QACxBA,UAAUkB,KAAK,GAAG;YAAE,GAAGlB,UAAUkB,KAAK;QAAC;QAEvC,MAAMC,sCAAsF;YAC1F;YACA;YACA;SAED;QAEDA,oCAAoChB,OAAO,CAAC,CAACC;YAC3C,IAAIA,OAAOJ,UAAUkB,KAAK,EAAE;gBAC1B,OAAOlB,UAAUkB,KAAK,CAACd,IAAI;YAC7B;QACF;QAEA,IAAI,iBAAiBJ,UAAUkB,KAAK,EAAE;YACpClB,UAAUkB,KAAK,CAACE,WAAW,GAAG;gBAAE,GAAGpB,UAAUkB,KAAK,CAACE,WAAW;YAAC;YAC/D,OAAOpB,UAAUkB,KAAK,CAACE,WAAW,CAACC,GAAG;QACxC;IACF;IAEA,OAAOrB;AACT,EAAC;AAED,OAAO,MAAMsB,gCAAgC,CAAC,EAC5CC,WAAW,EACXxB,CAAC,EAIF,GACCwB,YAAYC,GAAG,CAAC,CAAC1B,aAAeD,6BAA6B;YAAEC;YAAYC;QAAE,IAAG"}