import type { Language } from '../types.js';
export declare const enTranslations: {
    authentication: {
        account: string;
        accountOfCurrentUser: string;
        alreadyActivated: string;
        alreadyLoggedIn: string;
        apiKey: string;
        authenticated: string;
        backToLogin: string;
        beginCreateFirstUser: string;
        changePassword: string;
        checkYourEmailForPasswordReset: string;
        confirmGeneration: string;
        confirmPassword: string;
        createFirstUser: string;
        emailNotValid: string;
        emailSent: string;
        emailVerified: string;
        enableAPIKey: string;
        failedToUnlock: string;
        forceUnlock: string;
        forgotPassword: string;
        forgotPasswordEmailInstructions: string;
        forgotPasswordQuestion: string;
        generate: string;
        generateNewAPIKey: string;
        generatingNewAPIKeyWillInvalidate: string;
        lockUntil: string;
        logBackIn: string;
        logOut: string;
        loggedIn: string;
        loggedInChangePassword: string;
        loggedOutInactivity: string;
        loggedOutSuccessfully: string;
        loggingOut: string;
        login: string;
        loginAttempts: string;
        loginUser: string;
        loginWithAnotherUser: string;
        logout: string;
        logoutSuccessful: string;
        logoutUser: string;
        newAPIKeyGenerated: string;
        newAccountCreated: string;
        newPassword: string;
        passed: string;
        passwordResetSuccessfully: string;
        resetPassword: string;
        resetPasswordExpiration: string;
        resetPasswordToken: string;
        resetYourPassword: string;
        stayLoggedIn: string;
        successfullyRegisteredFirstUser: string;
        successfullyUnlocked: string;
        tokenRefreshSuccessful: string;
        unableToVerify: string;
        verified: string;
        verifiedSuccessfully: string;
        verify: string;
        verifyUser: string;
        verifyYourEmail: string;
        youAreInactive: string;
        youAreReceivingResetPassword: string;
        youDidNotRequestPassword: string;
    };
    error: {
        accountAlreadyActivated: string;
        autosaving: string;
        correctInvalidFields: string;
        deletingFile: string;
        deletingTitle: string;
        emailOrPasswordIncorrect: string;
        followingFieldsInvalid_one: string;
        followingFieldsInvalid_other: string;
        incorrectCollection: string;
        invalidFileType: string;
        invalidFileTypeValue: string;
        loadingDocument: string;
        localesNotSaved_one: string;
        localesNotSaved_other: string;
        logoutFailed: string;
        missingEmail: string;
        missingIDOfDocument: string;
        missingIDOfVersion: string;
        missingRequiredData: string;
        noFilesUploaded: string;
        noMatchedField: string;
        noUser: string;
        notAllowedToAccessPage: string;
        notAllowedToPerformAction: string;
        notFound: string;
        previewing: string;
        problemUploadingFile: string;
        tokenInvalidOrExpired: string;
        tokenNotProvided: string;
        unPublishingDocument: string;
        unableToDeleteCount: string;
        unableToUpdateCount: string;
        unauthorized: string;
        unknown: string;
        unspecific: string;
        userEmailAlreadyRegistered: string;
        userLocked: string;
        valueMustBeUnique: string;
        verificationTokenInvalid: string;
    };
    fields: {
        addLabel: string;
        addLink: string;
        addNew: string;
        addNewLabel: string;
        addRelationship: string;
        addUpload: string;
        block: string;
        blockType: string;
        blocks: string;
        chooseBetweenCustomTextOrDocument: string;
        chooseDocumentToLink: string;
        chooseFromExisting: string;
        chooseLabel: string;
        collapseAll: string;
        customURL: string;
        editLabelData: string;
        editLink: string;
        editRelationship: string;
        enterURL: string;
        internalLink: string;
        itemsAndMore: string;
        labelRelationship: string;
        latitude: string;
        linkType: string;
        linkedTo: string;
        longitude: string;
        newLabel: string;
        openInNewTab: string;
        passwordsDoNotMatch: string;
        relatedDocument: string;
        relationTo: string;
        removeRelationship: string;
        removeUpload: string;
        saveChanges: string;
        searchForBlock: string;
        selectExistingLabel: string;
        selectFieldsToEdit: string;
        showAll: string;
        swapRelationship: string;
        swapUpload: string;
        textToDisplay: string;
        toggleBlock: string;
        uploadNewLabel: string;
    };
    general: {
        aboutToDelete: string;
        aboutToDeleteCount_many: string;
        aboutToDeleteCount_one: string;
        aboutToDeleteCount_other: string;
        addBelow: string;
        addFilter: string;
        adminTheme: string;
        and: string;
        applyChanges: string;
        ascending: string;
        automatic: string;
        backToDashboard: string;
        cancel: string;
        changesNotSaved: string;
        close: string;
        collapse: string;
        collections: string;
        columnToSort: string;
        columns: string;
        confirm: string;
        confirmDeletion: string;
        confirmDuplication: string;
        copied: string;
        copy: string;
        create: string;
        createNew: string;
        createNewLabel: string;
        created: string;
        createdAt: string;
        creating: string;
        creatingNewLabel: string;
        custom: string;
        dark: string;
        dashboard: string;
        delete: string;
        deletedCountSuccessfully: string;
        deletedSuccessfully: string;
        deleting: string;
        depth: string;
        descending: string;
        deselectAllRows: string;
        document: string;
        documents: string;
        duplicate: string;
        duplicateWithoutSaving: string;
        edit: string;
        editLabel: string;
        editing: string;
        editingLabel_many: string;
        editingLabel_one: string;
        editingLabel_other: string;
        email: string;
        emailAddress: string;
        enterAValue: string;
        error: string;
        errors: string;
        fallbackToDefaultLocale: string;
        false: string;
        filter: string;
        filterWhere: string;
        filters: string;
        globals: string;
        language: string;
        lastModified: string;
        leaveAnyway: string;
        leaveWithoutSaving: string;
        light: string;
        livePreview: string;
        loading: string;
        locale: string;
        locales: string;
        menu: string;
        moveDown: string;
        moveUp: string;
        newPassword: string;
        noFiltersSet: string;
        noLabel: string;
        noOptions: string;
        noResults: string;
        noValue: string;
        none: string;
        notFound: string;
        nothingFound: string;
        of: string;
        open: string;
        or: string;
        order: string;
        pageNotFound: string;
        password: string;
        payloadSettings: string;
        perPage: string;
        remove: string;
        reset: string;
        row: string;
        rows: string;
        save: string;
        saving: string;
        searchBy: string;
        selectAll: string;
        selectAllRows: string;
        selectValue: string;
        selectedCount: string;
        showAllLabel: string;
        sorryNotFound: string;
        sort: string;
        sortByLabelDirection: string;
        stayOnThisPage: string;
        submissionSuccessful: string;
        submit: string;
        submitting: string;
        success: string;
        successfullyCreated: string;
        successfullyDuplicated: string;
        thisLanguage: string;
        titleDeleted: string;
        true: string;
        unauthorized: string;
        unsavedChangesDuplicate: string;
        untitled: string;
        updatedAt: string;
        updatedCountSuccessfully: string;
        updatedSuccessfully: string;
        updating: string;
        uploading: string;
        user: string;
        users: string;
        value: string;
        welcome: string;
    };
    operators: {
        contains: string;
        equals: string;
        exists: string;
        isGreaterThan: string;
        isGreaterThanOrEqualTo: string;
        isIn: string;
        isLessThan: string;
        isLessThanOrEqualTo: string;
        isLike: string;
        isNotEqualTo: string;
        isNotIn: string;
        near: string;
    };
    upload: {
        crop: string;
        cropToolDescription: string;
        dragAndDrop: string;
        dragAndDropHere: string;
        editImage: string;
        fileName: string;
        fileSize: string;
        focalPoint: string;
        focalPointDescription: string;
        height: string;
        lessInfo: string;
        moreInfo: string;
        previewSizes: string;
        selectCollectionToBrowse: string;
        selectFile: string;
        setCropArea: string;
        setFocalPoint: string;
        sizes: string;
        sizesFor: string;
        width: string;
    };
    validation: {
        emailAddress: string;
        enterNumber: string;
        fieldHasNo: string;
        greaterThanMax: string;
        integerOnly: string;
        invalidInput: string;
        invalidSelection: string;
        invalidSelections: string;
        lessThanMin: string;
        limitReached: string;
        longerThanMin: string;
        notValidDate: string;
        required: string;
        requiresAtLeast: string;
        requiresNoMoreThan: string;
        requiresTwoNumbers: string;
        shorterThanMax: string;
        trueOrFalse: string;
        validUploadID: string;
    };
    version: {
        type: string;
        aboutToPublishSelection: string;
        aboutToRestore: string;
        aboutToRestoreGlobal: string;
        aboutToRevertToPublished: string;
        aboutToUnpublish: string;
        aboutToUnpublishSelection: string;
        autosave: string;
        autosavedSuccessfully: string;
        autosavedVersion: string;
        changed: string;
        compareVersion: string;
        confirmPublish: string;
        confirmRevertToSaved: string;
        confirmUnpublish: string;
        confirmVersionRestoration: string;
        currentDocumentStatus: string;
        draft: string;
        draftSavedSuccessfully: string;
        lastSavedAgo: string;
        noFurtherVersionsFound: string;
        noRowsFound: string;
        preview: string;
        problemRestoringVersion: string;
        publish: string;
        publishChanges: string;
        published: string;
        publishing: string;
        restoreThisVersion: string;
        restoredSuccessfully: string;
        restoring: string;
        revertToPublished: string;
        reverting: string;
        saveDraft: string;
        selectLocales: string;
        selectVersionToCompare: string;
        showLocales: string;
        showingVersionsFor: string;
        status: string;
        unpublish: string;
        unpublishing: string;
        version: string;
        versionCount_many: string;
        versionCount_none: string;
        versionCount_one: string;
        versionCount_other: string;
        versionCreatedOn: string;
        versionID: string;
        versions: string;
        viewingVersion: string;
        viewingVersionGlobal: string;
        viewingVersions: string;
        viewingVersionsGlobal: string;
    };
};
export declare const en: Language;
//# sourceMappingURL=en.d.ts.map