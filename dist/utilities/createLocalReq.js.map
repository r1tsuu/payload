{"version":3,"sources":["../../src/utilities/createLocalReq.ts"],"sourcesContent":["import type { User } from '../auth/types.js'\nimport type { Payload, RequestContext } from '../index.js'\nimport type { PayloadRequestWithData } from '../types/index.js'\n\nimport { getDataLoader } from '../collections/dataloader.js'\nimport { getLocalI18n } from '../translations/getLocalI18n.js'\n\nfunction getRequestContext(\n  req: PayloadRequestWithData = { context: null } as PayloadRequestWithData,\n  context: RequestContext = {},\n): RequestContext {\n  if (req.context) {\n    if (Object.keys(req.context).length === 0 && req.context.constructor === Object) {\n      // if req.context is `{}` avoid unnecessary spread\n      return context\n    } else {\n      return { ...req.context, ...context }\n    }\n  } else {\n    return context\n  }\n}\n\nconst attachFakeURLProperties = (req: PayloadRequestWithData) => {\n  /**\n   * *NOTE*\n   * If no URL is provided, the local API was called directly outside\n   * the context of a request. Therefore we create a fake URL object.\n   * `ts-expect-error` is used below for properties that are 'read-only'\n   * since they do not exist yet we can safely ignore the error.\n   */\n  let urlObject\n\n  function getURLObject() {\n    if (urlObject) return urlObject\n    const urlToUse = req?.url || req.payload.config?.serverURL || 'http://localhost'\n    try {\n      urlObject = new URL(urlToUse)\n    } catch (error) {\n      urlObject = new URL('http://localhost')\n    }\n\n    return urlObject\n  }\n\n  if (!req.host) req.host = getURLObject().host\n  if (!req.protocol) req.protocol = getURLObject().protocol\n  if (!req.pathname) req.pathname = getURLObject().pathname\n  // @ts-expect-error\n  if (!req.searchParams) req.searchParams = getURLObject().searchParams\n  // @ts-expect-error\n  if (!req.origin) req.origin = getURLObject().origin\n  // @ts-expect-error\n  if (!req?.url) req.url = getURLObject().href\n}\n\ntype CreateLocalReq = (\n  options: {\n    context?: RequestContext\n    fallbackLocale?: string\n    locale?: string\n    req?: PayloadRequestWithData\n    user?: User\n  },\n  payload: Payload,\n) => Promise<PayloadRequestWithData>\nexport const createLocalReq: CreateLocalReq = async (\n  { context, fallbackLocale, locale: localeArg, req = {} as PayloadRequestWithData, user },\n  payload,\n) => {\n  if (payload.config?.localization) {\n    const locale = localeArg === '*' ? 'all' : localeArg\n    const defaultLocale = payload.config.localization.defaultLocale\n    req.locale = locale || req?.locale || defaultLocale\n    const fallbackLocaleFromConfig = payload.config.localization.locales.find(\n      ({ code }) => req.locale === code,\n    )?.fallbackLocale\n    if (typeof fallbackLocale !== 'undefined') {\n      req.fallbackLocale = fallbackLocale\n    } else if (typeof req?.fallbackLocale === 'undefined') {\n      req.fallbackLocale = fallbackLocaleFromConfig || defaultLocale\n    }\n  }\n\n  const i18n =\n    req?.i18n ||\n    (await getLocalI18n({ config: payload.config, language: payload.config.i18n.fallbackLanguage }))\n\n  // @ts-expect-error\n  if (!req.headers) req.headers = new Headers()\n  req.context = getRequestContext(req, context)\n  req.payloadAPI = req?.payloadAPI || 'local'\n  req.payload = payload\n  req.i18n = i18n\n  req.t = i18n.t\n  req.user = user || req?.user || null\n  req.payloadDataLoader = req?.payloadDataLoader || getDataLoader(req)\n  req.routeParams = req?.routeParams || {}\n  req.query = req?.query || {}\n\n  attachFakeURLProperties(req)\n\n  return req\n}\n"],"names":["getDataLoader","getLocalI18n","getRequestContext","req","context","Object","keys","length","constructor","attachFakeURLProperties","urlObject","getURLObject","urlToUse","url","payload","config","serverURL","URL","error","host","protocol","pathname","searchParams","origin","href","createLocalReq","fallbackLocale","locale","localeArg","user","localization","defaultLocale","fallbackLocaleFromConfig","locales","find","code","i18n","language","fallbackLanguage","headers","Headers","payloadAPI","t","payloadDataLoader","routeParams","query"],"mappings":"AAIA,SAASA,aAAa,QAAQ,+BAA8B;AAC5D,SAASC,YAAY,QAAQ,kCAAiC;AAE9D,SAASC,kBACPC,MAA8B;IAAEC,SAAS;AAAK,CAA2B,EACzEA,UAA0B,CAAC,CAAC;IAE5B,IAAID,IAAIC,OAAO,EAAE;QACf,IAAIC,OAAOC,IAAI,CAACH,IAAIC,OAAO,EAAEG,MAAM,KAAK,KAAKJ,IAAIC,OAAO,CAACI,WAAW,KAAKH,QAAQ;YAC/E,kDAAkD;YAClD,OAAOD;QACT,OAAO;YACL,OAAO;gBAAE,GAAGD,IAAIC,OAAO;gBAAE,GAAGA,OAAO;YAAC;QACtC;IACF,OAAO;QACL,OAAOA;IACT;AACF;AAEA,MAAMK,0BAA0B,CAACN;IAC/B;;;;;;GAMC,GACD,IAAIO;IAEJ,SAASC;QACP,IAAID,WAAW,OAAOA;QACtB,MAAME,WAAWT,KAAKU,OAAOV,IAAIW,OAAO,CAACC,MAAM,EAAEC,aAAa;QAC9D,IAAI;YACFN,YAAY,IAAIO,IAAIL;QACtB,EAAE,OAAOM,OAAO;YACdR,YAAY,IAAIO,IAAI;QACtB;QAEA,OAAOP;IACT;IAEA,IAAI,CAACP,IAAIgB,IAAI,EAAEhB,IAAIgB,IAAI,GAAGR,eAAeQ,IAAI;IAC7C,IAAI,CAAChB,IAAIiB,QAAQ,EAAEjB,IAAIiB,QAAQ,GAAGT,eAAeS,QAAQ;IACzD,IAAI,CAACjB,IAAIkB,QAAQ,EAAElB,IAAIkB,QAAQ,GAAGV,eAAeU,QAAQ;IACzD,mBAAmB;IACnB,IAAI,CAAClB,IAAImB,YAAY,EAAEnB,IAAImB,YAAY,GAAGX,eAAeW,YAAY;IACrE,mBAAmB;IACnB,IAAI,CAACnB,IAAIoB,MAAM,EAAEpB,IAAIoB,MAAM,GAAGZ,eAAeY,MAAM;IACnD,mBAAmB;IACnB,IAAI,CAACpB,KAAKU,KAAKV,IAAIU,GAAG,GAAGF,eAAea,IAAI;AAC9C;AAYA,OAAO,MAAMC,iBAAiC,OAC5C,EAAErB,OAAO,EAAEsB,cAAc,EAAEC,QAAQC,SAAS,EAAEzB,MAAM,CAAC,CAA2B,EAAE0B,IAAI,EAAE,EACxFf;IAEA,IAAIA,QAAQC,MAAM,EAAEe,cAAc;QAChC,MAAMH,SAASC,cAAc,MAAM,QAAQA;QAC3C,MAAMG,gBAAgBjB,QAAQC,MAAM,CAACe,YAAY,CAACC,aAAa;QAC/D5B,IAAIwB,MAAM,GAAGA,UAAUxB,KAAKwB,UAAUI;QACtC,MAAMC,2BAA2BlB,QAAQC,MAAM,CAACe,YAAY,CAACG,OAAO,CAACC,IAAI,CACvE,CAAC,EAAEC,IAAI,EAAE,GAAKhC,IAAIwB,MAAM,KAAKQ,OAC5BT;QACH,IAAI,OAAOA,mBAAmB,aAAa;YACzCvB,IAAIuB,cAAc,GAAGA;QACvB,OAAO,IAAI,OAAOvB,KAAKuB,mBAAmB,aAAa;YACrDvB,IAAIuB,cAAc,GAAGM,4BAA4BD;QACnD;IACF;IAEA,MAAMK,OACJjC,KAAKiC,QACJ,MAAMnC,aAAa;QAAEc,QAAQD,QAAQC,MAAM;QAAEsB,UAAUvB,QAAQC,MAAM,CAACqB,IAAI,CAACE,gBAAgB;IAAC;IAE/F,mBAAmB;IACnB,IAAI,CAACnC,IAAIoC,OAAO,EAAEpC,IAAIoC,OAAO,GAAG,IAAIC;IACpCrC,IAAIC,OAAO,GAAGF,kBAAkBC,KAAKC;IACrCD,IAAIsC,UAAU,GAAGtC,KAAKsC,cAAc;IACpCtC,IAAIW,OAAO,GAAGA;IACdX,IAAIiC,IAAI,GAAGA;IACXjC,IAAIuC,CAAC,GAAGN,KAAKM,CAAC;IACdvC,IAAI0B,IAAI,GAAGA,QAAQ1B,KAAK0B,QAAQ;IAChC1B,IAAIwC,iBAAiB,GAAGxC,KAAKwC,qBAAqB3C,cAAcG;IAChEA,IAAIyC,WAAW,GAAGzC,KAAKyC,eAAe,CAAC;IACvCzC,IAAI0C,KAAK,GAAG1C,KAAK0C,SAAS,CAAC;IAE3BpC,wBAAwBN;IAExB,OAAOA;AACT,EAAC"}