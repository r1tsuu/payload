{"version":3,"sources":["../../src/config/client.ts"],"sourcesContent":["import type { TFunction } from '@payloadcms/translations'\n\nimport type { ClientCollectionConfig } from '../collections/config/client.js'\nimport type { SanitizedCollectionConfig } from '../collections/config/types.js'\nimport type { ClientGlobalConfig } from '../globals/config/client.js'\nimport type { SanitizedGlobalConfig } from '../globals/config/types.js'\nimport type {\n  LivePreviewConfig,\n  SanitizedConfig,\n  ServerOnlyLivePreviewProperties,\n} from './types.js'\n\nimport { createClientCollectionConfigs } from '../collections/config/client.js'\nimport { createClientGlobalConfigs } from '../globals/config/client.js'\n\nexport type ServerOnlyRootProperties = keyof Pick<\n  SanitizedConfig,\n  | 'bin'\n  | 'cors'\n  | 'csrf'\n  | 'custom'\n  | 'db'\n  | 'editor'\n  | 'email'\n  | 'endpoints'\n  | 'graphQL'\n  | 'hooks'\n  | 'onInit'\n  | 'plugins'\n  | 'secret'\n  | 'sharp'\n  | 'typescript'\n>\n\nexport type ServerOnlyRootAdminProperties = keyof Pick<SanitizedConfig['admin'], 'components'>\n\nexport type ClientConfig = Omit<\n  SanitizedConfig,\n  'admin' | 'collections' | 'globals' | ServerOnlyRootProperties\n> & {\n  admin: Omit<SanitizedConfig['admin'], ServerOnlyRootAdminProperties & 'livePreview'> & {\n    livePreview?: Omit<LivePreviewConfig, ServerOnlyLivePreviewProperties>\n  }\n  collections: ClientCollectionConfig[]\n  custom?: Record<string, any>\n  globals: ClientGlobalConfig[]\n}\n\nexport const createClientConfig = async ({\n  config,\n  t,\n}: {\n  config: SanitizedConfig\n  t: TFunction\n  // eslint-disable-next-line @typescript-eslint/require-await\n}): Promise<ClientConfig> => {\n  const clientConfig: ClientConfig = { ...config }\n\n  const serverOnlyConfigProperties: Partial<ServerOnlyRootProperties>[] = [\n    'endpoints',\n    'db',\n    'editor',\n    'plugins',\n    'sharp',\n    'onInit',\n    'secret',\n    'hooks',\n    'bin',\n    'typescript',\n    'cors',\n    'csrf',\n    'email',\n    'custom',\n    'graphQL',\n    // `admin`, `onInit`, `localization`, `collections`, and `globals` are all handled separately\n  ]\n\n  serverOnlyConfigProperties.forEach((key) => {\n    if (key in clientConfig) {\n      delete clientConfig[key]\n    }\n  })\n\n  if ('localization' in clientConfig && clientConfig.localization) {\n    clientConfig.localization = { ...clientConfig.localization }\n\n    clientConfig.localization.locales.forEach((locale) => {\n      delete locale.toString\n    })\n  }\n\n  if ('admin' in clientConfig) {\n    clientConfig.admin = { ...clientConfig.admin }\n\n    const serverOnlyAdminProperties: Partial<ServerOnlyRootAdminProperties>[] = ['components']\n\n    serverOnlyAdminProperties.forEach((key) => {\n      if (key in clientConfig.admin) {\n        delete clientConfig.admin[key]\n      }\n    })\n\n    if ('livePreview' in clientConfig.admin) {\n      clientConfig.admin.livePreview = { ...clientConfig.admin.livePreview }\n      delete clientConfig.admin.livePreview.url\n    }\n  }\n\n  clientConfig.collections = createClientCollectionConfigs({\n    collections: clientConfig.collections as SanitizedCollectionConfig[],\n    t,\n  })\n\n  clientConfig.globals = createClientGlobalConfigs({\n    globals: clientConfig.globals as SanitizedGlobalConfig[],\n    t,\n  })\n\n  return clientConfig\n}\n"],"names":["createClientCollectionConfigs","createClientGlobalConfigs","createClientConfig","config","t","clientConfig","serverOnlyConfigProperties","forEach","key","localization","locales","locale","toString","admin","serverOnlyAdminProperties","livePreview","url","collections","globals"],"mappings":"AAYA,SAASA,6BAA6B,QAAQ,kCAAiC;AAC/E,SAASC,yBAAyB,QAAQ,8BAA6B;AAmCvE,OAAO,MAAMC,qBAAqB,OAAO,EACvCC,MAAM,EACNC,CAAC,EAKF;IACC,MAAMC,eAA6B;QAAE,GAAGF,MAAM;IAAC;IAE/C,MAAMG,6BAAkE;QACtE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAED;IAEDA,2BAA2BC,OAAO,CAAC,CAACC;QAClC,IAAIA,OAAOH,cAAc;YACvB,OAAOA,YAAY,CAACG,IAAI;QAC1B;IACF;IAEA,IAAI,kBAAkBH,gBAAgBA,aAAaI,YAAY,EAAE;QAC/DJ,aAAaI,YAAY,GAAG;YAAE,GAAGJ,aAAaI,YAAY;QAAC;QAE3DJ,aAAaI,YAAY,CAACC,OAAO,CAACH,OAAO,CAAC,CAACI;YACzC,OAAOA,OAAOC,QAAQ;QACxB;IACF;IAEA,IAAI,WAAWP,cAAc;QAC3BA,aAAaQ,KAAK,GAAG;YAAE,GAAGR,aAAaQ,KAAK;QAAC;QAE7C,MAAMC,4BAAsE;YAAC;SAAa;QAE1FA,0BAA0BP,OAAO,CAAC,CAACC;YACjC,IAAIA,OAAOH,aAAaQ,KAAK,EAAE;gBAC7B,OAAOR,aAAaQ,KAAK,CAACL,IAAI;YAChC;QACF;QAEA,IAAI,iBAAiBH,aAAaQ,KAAK,EAAE;YACvCR,aAAaQ,KAAK,CAACE,WAAW,GAAG;gBAAE,GAAGV,aAAaQ,KAAK,CAACE,WAAW;YAAC;YACrE,OAAOV,aAAaQ,KAAK,CAACE,WAAW,CAACC,GAAG;QAC3C;IACF;IAEAX,aAAaY,WAAW,GAAGjB,8BAA8B;QACvDiB,aAAaZ,aAAaY,WAAW;QACrCb;IACF;IAEAC,aAAaa,OAAO,GAAGjB,0BAA0B;QAC/CiB,SAASb,aAAaa,OAAO;QAC7Bd;IACF;IAEA,OAAOC;AACT,EAAC"}