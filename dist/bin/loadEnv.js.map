{"version":3,"sources":["../../src/bin/loadEnv.ts"],"sourcesContent":["import nextEnvImport from '@next/env'\nconst { loadEnvConfig } = nextEnvImport\nimport { findUpStop, findUpSync } from 'find-up'\n\n/**\n * Try to find user's env files and load it. Uses the same algorithm next.js uses to parse env files, meaning this also supports .env.local, .env.development, .env.production, etc.\n */\nexport function loadEnv(path?: string) {\n  if (path?.length) {\n    loadEnvConfig(path, true)\n    return\n  }\n\n  const { loadedEnvFiles } = loadEnvConfig(process.cwd(), true) // assuming this won't run in production\n\n  if (!loadedEnvFiles?.length) {\n    // use findUp to find the env file. So, run loadEnvConfig for every directory upwards\n    findUpSync((dir) => {\n      const { loadedEnvFiles } = loadEnvConfig(dir, true)\n      if (loadedEnvFiles?.length) {\n        return findUpStop\n      }\n    })\n  }\n}\n"],"names":["nextEnvImport","loadEnvConfig","findUpStop","findUpSync","loadEnv","path","length","loadedEnvFiles","process","cwd","dir"],"mappings":"AAAA,OAAOA,mBAAmB,YAAW;AACrC,MAAM,EAAEC,aAAa,EAAE,GAAGD;AAC1B,SAASE,UAAU,EAAEC,UAAU,QAAQ,UAAS;AAEhD;;CAEC,GACD,OAAO,SAASC,QAAQC,IAAa;IACnC,IAAIA,MAAMC,QAAQ;QAChBL,cAAcI,MAAM;QACpB;IACF;IAEA,MAAM,EAAEE,cAAc,EAAE,GAAGN,cAAcO,QAAQC,GAAG,IAAI,MAAM,wCAAwC;;IAEtG,IAAI,CAACF,gBAAgBD,QAAQ;QAC3B,qFAAqF;QACrFH,WAAW,CAACO;YACV,MAAM,EAAEH,cAAc,EAAE,GAAGN,cAAcS,KAAK;YAC9C,IAAIH,gBAAgBD,QAAQ;gBAC1B,OAAOJ;YACT;QACF;IACF;AACF"}