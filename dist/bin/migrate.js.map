{"version":3,"sources":["../../src/bin/migrate.ts"],"sourcesContent":["import type { ParsedArgs } from 'minimist'\n\nimport type { SanitizedConfig } from '../config/types.js'\n\nimport payload from '../index.js'\nimport { prettySyncLoggerDestination } from '../utilities/logger.js'\n\n/**\n * The default logger's options did not allow for forcing sync logging\n * Using these options, to force both pretty print and sync logging\n */\nconst prettySyncLogger = {\n  loggerDestination: prettySyncLoggerDestination,\n  loggerOptions: {},\n}\n\nconst availableCommands = [\n  'migrate',\n  'migrate:create',\n  'migrate:down',\n  'migrate:refresh',\n  'migrate:reset',\n  'migrate:status',\n  'migration:fresh',\n]\n\nconst availableCommandsMsg = `Available commands: ${availableCommands.join(', ')}`\n\ntype Args = {\n  config: SanitizedConfig\n  parsedArgs: ParsedArgs\n}\n\nexport const migrate = async ({ config, parsedArgs }: Args): Promise<void> => {\n  const { _: args, file, forceAcceptWarning, help } = parsedArgs\n  if (help) {\n    // eslint-disable-next-line no-console\n    console.log(`\\n\\n${availableCommandsMsg}\\n`) // Avoid having to init payload to get the logger\n    process.exit(0)\n  }\n\n  process.env.PAYLOAD_MIGRATING = 'true'\n\n  // Barebones instance to access database adapter\n  await payload.init({\n    config,\n    disableOnInit: true,\n    ...prettySyncLogger,\n  })\n\n  const adapter = payload.db\n\n  if (!adapter) {\n    throw new Error('No database adapter found')\n  }\n\n  if (!args.length) {\n    payload.logger.error({\n      msg: `No migration command provided. ${availableCommandsMsg}`,\n    })\n    process.exit(1)\n  }\n\n  switch (args[0]) {\n    case 'migrate':\n      await adapter.migrate()\n      break\n    case 'migrate:status':\n      await adapter.migrateStatus()\n      break\n    case 'migrate:down':\n      await adapter.migrateDown()\n      break\n    case 'migrate:refresh':\n      await adapter.migrateRefresh()\n      break\n    case 'migrate:reset':\n      await adapter.migrateReset()\n      break\n    case 'migrate:fresh':\n      await adapter.migrateFresh({ forceAcceptWarning })\n      break\n    case 'migrate:create':\n      try {\n        await adapter.createMigration({\n          file,\n          forceAcceptWarning,\n          migrationName: args[1],\n          payload,\n        })\n      } catch (err) {\n        throw new Error(`Error creating migration: ${err.message}`)\n      }\n      break\n\n    default:\n      payload.logger.error({\n        msg: `Unknown migration command: ${args[0]}. ${availableCommandsMsg}`,\n      })\n      process.exit(1)\n  }\n\n  payload.logger.info('Done.')\n}\n"],"names":["payload","prettySyncLoggerDestination","prettySyncLogger","loggerDestination","loggerOptions","availableCommands","availableCommandsMsg","join","migrate","config","parsedArgs","_","args","file","forceAcceptWarning","help","console","log","process","exit","env","PAYLOAD_MIGRATING","init","disableOnInit","adapter","db","Error","length","logger","error","msg","migrateStatus","migrateDown","migrateRefresh","migrateReset","migrateFresh","createMigration","migrationName","err","message","info"],"mappings":"AAIA,OAAOA,aAAa,cAAa;AACjC,SAASC,2BAA2B,QAAQ,yBAAwB;AAEpE;;;CAGC,GACD,MAAMC,mBAAmB;IACvBC,mBAAmBF;IACnBG,eAAe,CAAC;AAClB;AAEA,MAAMC,oBAAoB;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,uBAAuB,CAAC,oBAAoB,EAAED,kBAAkBE,IAAI,CAAC,MAAM,CAAC;AAOlF,OAAO,MAAMC,UAAU,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAQ;IACxD,MAAM,EAAEC,GAAGC,IAAI,EAAEC,IAAI,EAAEC,kBAAkB,EAAEC,IAAI,EAAE,GAAGL;IACpD,IAAIK,MAAM;QACR,sCAAsC;QACtCC,QAAQC,GAAG,CAAC,CAAC,IAAI,EAAEX,qBAAqB,EAAE,CAAC,EAAE,iDAAiD;;QAC9FY,QAAQC,IAAI,CAAC;IACf;IAEAD,QAAQE,GAAG,CAACC,iBAAiB,GAAG;IAEhC,gDAAgD;IAChD,MAAMrB,QAAQsB,IAAI,CAAC;QACjBb;QACAc,eAAe;QACf,GAAGrB,gBAAgB;IACrB;IAEA,MAAMsB,UAAUxB,QAAQyB,EAAE;IAE1B,IAAI,CAACD,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IAEA,IAAI,CAACd,KAAKe,MAAM,EAAE;QAChB3B,QAAQ4B,MAAM,CAACC,KAAK,CAAC;YACnBC,KAAK,CAAC,+BAA+B,EAAExB,qBAAqB,CAAC;QAC/D;QACAY,QAAQC,IAAI,CAAC;IACf;IAEA,OAAQP,IAAI,CAAC,EAAE;QACb,KAAK;YACH,MAAMY,QAAQhB,OAAO;YACrB;QACF,KAAK;YACH,MAAMgB,QAAQO,aAAa;YAC3B;QACF,KAAK;YACH,MAAMP,QAAQQ,WAAW;YACzB;QACF,KAAK;YACH,MAAMR,QAAQS,cAAc;YAC5B;QACF,KAAK;YACH,MAAMT,QAAQU,YAAY;YAC1B;QACF,KAAK;YACH,MAAMV,QAAQW,YAAY,CAAC;gBAAErB;YAAmB;YAChD;QACF,KAAK;YACH,IAAI;gBACF,MAAMU,QAAQY,eAAe,CAAC;oBAC5BvB;oBACAC;oBACAuB,eAAezB,IAAI,CAAC,EAAE;oBACtBZ;gBACF;YACF,EAAE,OAAOsC,KAAK;gBACZ,MAAM,IAAIZ,MAAM,CAAC,0BAA0B,EAAEY,IAAIC,OAAO,CAAC,CAAC;YAC5D;YACA;QAEF;YACEvC,QAAQ4B,MAAM,CAACC,KAAK,CAAC;gBACnBC,KAAK,CAAC,2BAA2B,EAAElB,IAAI,CAAC,EAAE,CAAC,EAAE,EAAEN,qBAAqB,CAAC;YACvE;YACAY,QAAQC,IAAI,CAAC;IACjB;IAEAnB,QAAQ4B,MAAM,CAACY,IAAI,CAAC;AACtB,EAAC"}