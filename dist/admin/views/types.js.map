{"version":3,"sources":["../../../src/admin/views/types.ts"],"sourcesContent":["import type { ClientTranslationsObject } from '@payloadcms/translations'\n\nimport type { Permissions } from '../../auth/index.js'\nimport type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type { Locale } from '../../config/types.js'\nimport type { SanitizedGlobalConfig } from '../../globals/config/types.js'\nimport type { PayloadRequestWithData } from '../../types/index.js'\nimport type { LanguageOptions } from '../LanguageOptions.js'\n\nexport type AdminViewConfig = {\n  Component: AdminViewComponent\n  /** Whether the path should be matched exactly or as a prefix */\n  exact?: boolean\n  path: string\n  sensitive?: boolean\n  strict?: boolean\n}\n\nexport type AdminViewProps = {\n  initPageResult: InitPageResult\n  params?: { [key: string]: string | string[] | undefined }\n  searchParams: { [key: string]: string | string[] | undefined }\n}\n\nexport type AdminViewComponent = React.ComponentType<AdminViewProps>\n\nexport type AdminView = AdminViewComponent | AdminViewConfig\n\nexport type EditViewProps = {\n  collectionSlug?: string\n  globalSlug?: string\n}\n\nexport type VisibleEntities = {\n  collections: SanitizedCollectionConfig['slug'][]\n  globals: SanitizedGlobalConfig['slug'][]\n}\n\nexport type InitPageResult = {\n  collectionConfig?: SanitizedCollectionConfig\n  cookies: Map<string, string>\n  docID?: string\n  globalConfig?: SanitizedGlobalConfig\n  languageOptions: LanguageOptions\n  locale?: Locale\n  permissions: Permissions\n  req: PayloadRequestWithData\n  translations: ClientTranslationsObject\n  visibleEntities: VisibleEntities\n}\n\nexport type ServerSideEditViewProps = {\n  initPageResult: InitPageResult\n  params: { [key: string]: string | string[] | undefined }\n  routeSegments: string[]\n  searchParams: { [key: string]: string | string[] | undefined }\n}\n"],"names":[],"mappings":"AAmDA,WAKC"}