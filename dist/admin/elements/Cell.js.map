{"version":3,"sources":["../../../src/admin/elements/Cell.ts"],"sourcesContent":["import type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type {\n  BlockField,\n  DateField,\n  Field,\n  FieldBase,\n  Labels,\n  RelationshipField,\n  SelectField,\n} from '../../fields/config/types.js'\n\nexport type RowData = Record<string, any>\n\nexport type CellComponentProps = {\n  blocks?: {\n    labels: BlockField['labels']\n    slug: string\n  }[]\n  className?: string\n  dateDisplayFormat?: DateField['admin']['date']['displayFormat']\n  fieldType?: Field['type']\n  isFieldAffectingData?: boolean\n  label?: Record<string, string> | string\n  labels?: Labels\n  link?: boolean\n  name: FieldBase['name']\n  onClick?: (args: {\n    cellData: unknown\n    collectionSlug: SanitizedCollectionConfig['slug']\n    rowData: RowData\n  }) => void\n  options?: SelectField['options']\n  relationTo?: RelationshipField['relationTo']\n  richTextComponentMap?: Map<string, React.ReactNode> // any should be MappedField\n  schemaPath: string\n}\n\nexport type DefaultCellComponentProps<T = any> = CellComponentProps & {\n  cellData: T\n  customCellContext?: {\n    collectionSlug?: SanitizedCollectionConfig['slug']\n    uploadConfig?: SanitizedCollectionConfig['upload']\n  }\n  rowData: RowData\n}\n"],"names":[],"mappings":"AAqCA,WAOC"}