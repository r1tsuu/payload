{"version":3,"sources":["../../../src/admin/elements/Tab.ts"],"sourcesContent":["import type { I18n } from '@payloadcms/translations'\n\nimport type { Permissions } from '../../auth/types.js'\nimport type { SanitizedCollectionConfig } from '../../collections/config/types.js'\nimport type { SanitizedConfig } from '../../config/types.js'\nimport type { SanitizedGlobalConfig } from '../../globals/config/types.js'\n\nexport type DocumentTabProps = {\n  apiURL?: string\n  collectionConfig?: SanitizedCollectionConfig\n  config: SanitizedConfig\n  globalConfig?: SanitizedGlobalConfig\n  i18n: I18n\n  permissions: Permissions\n}\n\nexport type DocumentTabCondition = (args: {\n  collectionConfig: SanitizedCollectionConfig\n  config: SanitizedConfig\n  globalConfig: SanitizedGlobalConfig\n  permissions: Permissions\n}) => boolean\n\n// Everything is optional because we merge in the defaults\n// i.e. the config may override the `Default` view with a `label` but not an `href`\nexport type DocumentTabConfig = {\n  Pill?: React.ComponentType\n  condition?: DocumentTabCondition\n  href?:\n    | ((args: {\n        apiURL: string\n        collection: SanitizedCollectionConfig\n        global: SanitizedGlobalConfig\n        id?: string\n        routes: SanitizedConfig['routes']\n      }) => string)\n    | string\n  isActive?: ((args: { href: string }) => boolean) | boolean\n  label?: ((args: { t: (key: string) => string }) => string) | string\n  newTab?: boolean\n}\n\nexport type DocumentTabComponent = React.ComponentType<{\n  path: string\n}>\n\nexport type DocumentTab = DocumentTabComponent | DocumentTabConfig\n"],"names":[],"mappings":"AA8CA,WAAkE"}