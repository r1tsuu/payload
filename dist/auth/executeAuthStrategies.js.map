{"version":3,"sources":["../../src/auth/executeAuthStrategies.ts"],"sourcesContent":["import type { AuthStrategyFunctionArgs, AuthStrategyResult } from './index.js'\n\nexport const executeAuthStrategies = async (\n  args: AuthStrategyFunctionArgs,\n): Promise<AuthStrategyResult> => {\n  return args.payload.authStrategies.reduce(\n    async (accumulatorPromise, strategy) => {\n      const result: AuthStrategyResult = await accumulatorPromise\n      if (!result.user) {\n        return strategy.authenticate(args)\n      }\n      return result\n    },\n    Promise.resolve({ user: null }),\n  )\n}\n"],"names":["executeAuthStrategies","args","payload","authStrategies","reduce","accumulatorPromise","strategy","result","user","authenticate","Promise","resolve"],"mappings":"AAEA,OAAO,MAAMA,wBAAwB,OACnCC;IAEA,OAAOA,KAAKC,OAAO,CAACC,cAAc,CAACC,MAAM,CACvC,OAAOC,oBAAoBC;QACzB,MAAMC,SAA6B,MAAMF;QACzC,IAAI,CAACE,OAAOC,IAAI,EAAE;YAChB,OAAOF,SAASG,YAAY,CAACR;QAC/B;QACA,OAAOM;IACT,GACAG,QAAQC,OAAO,CAAC;QAAEH,MAAM;IAAK;AAEjC,EAAC"}