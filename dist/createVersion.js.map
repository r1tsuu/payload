{"version":3,"sources":["../src/createVersion.ts"],"sourcesContent":["import type {\n  CreateVersionArgs,\n  PayloadRequestWithData,\n  TypeWithID,\n  TypeWithVersion,\n} from 'payload'\n\nimport { sql } from 'drizzle-orm'\nimport { buildVersionCollectionFields } from 'payload'\nimport toSnakeCase from 'to-snake-case'\n\nimport type { PostgresAdapter } from './types.js'\n\nimport { upsertRow } from './upsertRow/index.js'\n\nexport async function createVersion<T extends TypeWithID>(\n  this: PostgresAdapter,\n  {\n    autosave,\n    collectionSlug,\n    parent,\n    req = {} as PayloadRequestWithData,\n    versionData,\n  }: CreateVersionArgs<T>,\n) {\n  const db = this.sessions[req.transactionID]?.db || this.drizzle\n  const collection = this.payload.collections[collectionSlug].config\n  const defaultTableName = toSnakeCase(collection.slug)\n\n  const tableName = this.tableNameMap.get(`_${defaultTableName}${this.versionsSuffix}`)\n\n  const version = { ...versionData }\n  if (version.id) delete version.id\n\n  const result = await upsertRow<TypeWithVersion<T>>({\n    adapter: this,\n    data: {\n      autosave,\n      latest: true,\n      parent,\n      version,\n    },\n    db,\n    fields: buildVersionCollectionFields(collection),\n    operation: 'create',\n    req,\n    tableName,\n  })\n\n  const table = this.tables[tableName]\n\n  if (collection.versions.drafts) {\n    await db.execute(sql`\n      UPDATE ${table}\n      SET latest = false\n      WHERE ${table.id} != ${result.id}\n        AND ${table.parent} = ${parent}\n    `)\n  }\n\n  return result\n}\n"],"names":["sql","buildVersionCollectionFields","toSnakeCase","upsertRow","createVersion","autosave","collectionSlug","parent","req","versionData","db","sessions","transactionID","drizzle","collection","payload","collections","config","defaultTableName","slug","tableName","tableNameMap","get","versionsSuffix","version","id","result","adapter","data","latest","fields","operation","table","tables","versions","drafts","execute"],"mappings":"AAOA,SAASA,GAAG,QAAQ,cAAa;AACjC,SAASC,4BAA4B,QAAQ,UAAS;AACtD,OAAOC,iBAAiB,gBAAe;AAIvC,SAASC,SAAS,QAAQ,uBAAsB;AAEhD,OAAO,eAAeC,cAEpB,EACEC,QAAQ,EACRC,cAAc,EACdC,MAAM,EACNC,MAAM,CAAC,CAA2B,EAClCC,WAAW,EACU;IAEvB,MAAMC,KAAK,IAAI,CAACC,QAAQ,CAACH,IAAII,aAAa,CAAC,EAAEF,MAAM,IAAI,CAACG,OAAO;IAC/D,MAAMC,aAAa,IAAI,CAACC,OAAO,CAACC,WAAW,CAACV,eAAe,CAACW,MAAM;IAClE,MAAMC,mBAAmBhB,YAAYY,WAAWK,IAAI;IAEpD,MAAMC,YAAY,IAAI,CAACC,YAAY,CAACC,GAAG,CAAC,CAAC,CAAC,EAAEJ,iBAAiB,EAAE,IAAI,CAACK,cAAc,CAAC,CAAC;IAEpF,MAAMC,UAAU;QAAE,GAAGf,WAAW;IAAC;IACjC,IAAIe,QAAQC,EAAE,EAAE,OAAOD,QAAQC,EAAE;IAEjC,MAAMC,SAAS,MAAMvB,UAA8B;QACjDwB,SAAS,IAAI;QACbC,MAAM;YACJvB;YACAwB,QAAQ;YACRtB;YACAiB;QACF;QACAd;QACAoB,QAAQ7B,6BAA6Ba;QACrCiB,WAAW;QACXvB;QACAY;IACF;IAEA,MAAMY,QAAQ,IAAI,CAACC,MAAM,CAACb,UAAU;IAEpC,IAAIN,WAAWoB,QAAQ,CAACC,MAAM,EAAE;QAC9B,MAAMzB,GAAG0B,OAAO,CAACpC,GAAG,CAAC;aACZ,EAAEgC,MAAM;;YAET,EAAEA,MAAMP,EAAE,CAAC,IAAI,EAAEC,OAAOD,EAAE,CAAC;YAC3B,EAAEO,MAAMzB,MAAM,CAAC,GAAG,EAAEA,OAAO;IACnC,CAAC;IACH;IAEA,OAAOmB;AACT"}