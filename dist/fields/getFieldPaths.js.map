{"version":3,"sources":["../../src/fields/getFieldPaths.ts"],"sourcesContent":["import type { Field, TabAsField } from './config/types.js'\n\nimport { tabHasName } from './config/types.js'\n\nexport function getFieldPaths({\n  field,\n  parentPath,\n  parentSchemaPath,\n}: {\n  field: Field | TabAsField\n  parentPath: (number | string)[]\n  parentSchemaPath: string[]\n}): {\n  path: (number | string)[]\n  schemaPath: string[]\n} {\n  if (field.type === 'tabs' || field.type === 'row' || field.type === 'collapsible') {\n    return {\n      path: parentPath,\n      schemaPath: parentSchemaPath,\n    }\n  } else if (field.type === 'tab') {\n    if (tabHasName(field)) {\n      return {\n        path: [...parentPath, field.name],\n        schemaPath: [...parentSchemaPath, field.name],\n      }\n    } else {\n      return {\n        path: parentPath,\n        schemaPath: parentSchemaPath,\n      }\n    }\n  }\n  const path = parentPath?.length ? [...parentPath, field.name] : [field.name]\n  const schemaPath = parentSchemaPath?.length ? [...parentSchemaPath, field.name] : [field.name]\n\n  return { path, schemaPath }\n}\n"],"names":["tabHasName","getFieldPaths","field","parentPath","parentSchemaPath","type","path","schemaPath","name","length"],"mappings":"AAEA,SAASA,UAAU,QAAQ,oBAAmB;AAE9C,OAAO,SAASC,cAAc,EAC5BC,KAAK,EACLC,UAAU,EACVC,gBAAgB,EAKjB;IAIC,IAAIF,MAAMG,IAAI,KAAK,UAAUH,MAAMG,IAAI,KAAK,SAASH,MAAMG,IAAI,KAAK,eAAe;QACjF,OAAO;YACLC,MAAMH;YACNI,YAAYH;QACd;IACF,OAAO,IAAIF,MAAMG,IAAI,KAAK,OAAO;QAC/B,IAAIL,WAAWE,QAAQ;YACrB,OAAO;gBACLI,MAAM;uBAAIH;oBAAYD,MAAMM,IAAI;iBAAC;gBACjCD,YAAY;uBAAIH;oBAAkBF,MAAMM,IAAI;iBAAC;YAC/C;QACF,OAAO;YACL,OAAO;gBACLF,MAAMH;gBACNI,YAAYH;YACd;QACF;IACF;IACA,MAAME,OAAOH,YAAYM,SAAS;WAAIN;QAAYD,MAAMM,IAAI;KAAC,GAAG;QAACN,MAAMM,IAAI;KAAC;IAC5E,MAAMD,aAAaH,kBAAkBK,SAAS;WAAIL;QAAkBF,MAAMM,IAAI;KAAC,GAAG;QAACN,MAAMM,IAAI;KAAC;IAE9F,OAAO;QAAEF;QAAMC;IAAW;AAC5B"}