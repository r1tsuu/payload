{"version":3,"sources":["../../src/versions/saveVersion.ts"],"sourcesContent":["import type { SanitizedCollectionConfig, TypeWithID } from '../collections/config/types.js'\nimport type { SanitizedGlobalConfig } from '../globals/config/types.js'\nimport type { Payload } from '../index.js'\nimport type { PayloadRequestWithData } from '../types/index.js'\n\nimport { deepCopyObject } from '../utilities/deepCopyObject.js'\nimport sanitizeInternalFields from '../utilities/sanitizeInternalFields.js'\nimport { enforceMaxVersions } from './enforceMaxVersions.js'\n\ntype Args = {\n  autosave?: boolean\n  collection?: SanitizedCollectionConfig\n  docWithLocales: any\n  draft?: boolean\n  global?: SanitizedGlobalConfig\n  id?: number | string\n  payload: Payload\n  req?: PayloadRequestWithData\n}\n\nexport const saveVersion = async ({\n  id,\n  autosave,\n  collection,\n  docWithLocales: doc,\n  draft,\n  global,\n  payload,\n  req,\n}: Args): Promise<TypeWithID> => {\n  let result\n  let createNewVersion = true\n  const now = new Date().toISOString()\n  const versionData = deepCopyObject(doc)\n  if (draft) versionData._status = 'draft'\n  if (versionData._id) delete versionData._id\n\n  try {\n    if (autosave) {\n      let docs\n      const findVersionArgs = {\n        limit: 1,\n        pagination: false,\n        req,\n        sort: '-updatedAt',\n      }\n      if (collection) {\n        ;({ docs } = await payload.db.findVersions({\n          ...findVersionArgs,\n          collection: collection.slug,\n          req,\n          where: {\n            parent: {\n              equals: id,\n            },\n          },\n        }))\n      } else {\n        ;({ docs } = await payload.db.findGlobalVersions({\n          ...findVersionArgs,\n          global: global.slug,\n          req,\n        }))\n      }\n      const [latestVersion] = docs\n\n      // overwrite the latest version if it's set to autosave\n      if (latestVersion?.autosave === true) {\n        createNewVersion = false\n\n        const data: Record<string, unknown> = {\n          createdAt: new Date(latestVersion.createdAt).toISOString(),\n          updatedAt: draft ? now : new Date(doc.updatedAt).toISOString(),\n          version: versionData,\n        }\n\n        const updateVersionArgs = {\n          id: latestVersion.id,\n          req,\n          versionData: data as TypeWithID,\n        }\n\n        if (collection) {\n          result = await payload.db.updateVersion({\n            ...updateVersionArgs,\n            collection: collection.slug,\n            req,\n          })\n        } else {\n          result = await payload.db.updateGlobalVersion({\n            ...updateVersionArgs,\n            global: global.slug,\n            req,\n          })\n        }\n      }\n    }\n\n    if (createNewVersion) {\n      if (collection) {\n        result = await payload.db.createVersion({\n          autosave: Boolean(autosave),\n          collectionSlug: collection.slug,\n          createdAt: doc?.createdAt ? new Date(doc.createdAt).toISOString() : now,\n          parent: collection ? id : undefined,\n          req,\n          updatedAt: draft ? now : new Date(doc.updatedAt).toISOString(),\n          versionData,\n        })\n      }\n\n      if (global) {\n        result = await payload.db.createGlobalVersion({\n          autosave: Boolean(autosave),\n          createdAt: doc?.createdAt ? new Date(doc.createdAt).toISOString() : now,\n          globalSlug: global.slug,\n          parent: collection ? id : undefined,\n          req,\n          updatedAt: draft ? now : new Date(doc.updatedAt).toISOString(),\n          versionData,\n        })\n      }\n    }\n  } catch (err) {\n    let errorMessage: string\n\n    if (collection)\n      errorMessage = `There was an error while saving a version for the ${collection.labels.singular} with ID ${id}.`\n    if (global)\n      errorMessage = `There was an error while saving a version for the global ${global.label}.`\n    payload.logger.error(errorMessage)\n    payload.logger.error(err)\n    return\n  }\n\n  let max = 100\n\n  if (collection && typeof collection.versions.maxPerDoc === 'number')\n    max = collection.versions.maxPerDoc\n  if (global && typeof global.versions.max === 'number') max = global.versions.max\n\n  if (createNewVersion && max > 0) {\n    await enforceMaxVersions({\n      id,\n      collection,\n      global,\n      max,\n      payload,\n      req,\n    })\n  }\n\n  let createdVersion = result.version\n  createdVersion.createdAt = result.createdAt\n  createdVersion.updatedAt = result.updatedAt\n\n  createdVersion = sanitizeInternalFields(createdVersion)\n  createdVersion.id = result.parent\n\n  return createdVersion\n}\n"],"names":["deepCopyObject","sanitizeInternalFields","enforceMaxVersions","saveVersion","id","autosave","collection","docWithLocales","doc","draft","global","payload","req","result","createNewVersion","now","Date","toISOString","versionData","_status","_id","docs","findVersionArgs","limit","pagination","sort","db","findVersions","slug","where","parent","equals","findGlobalVersions","latestVersion","data","createdAt","updatedAt","version","updateVersionArgs","updateVersion","updateGlobalVersion","createVersion","Boolean","collectionSlug","undefined","createGlobalVersion","globalSlug","err","errorMessage","labels","singular","label","logger","error","max","versions","maxPerDoc","createdVersion"],"mappings":"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"}